plugins {
    id 'application'
    id 'airbyte-connector' // Assuming Airbyte's gradle plugin is used
}

airbyteConnector {
    connectorName = 'ragie'
    hasBreakingChanges = false // Set to true if making breaking changes
}

application {
    mainClass = 'io.airbyte.integrations.destination.ragie.RagieDestination'
    applicationDefaultJvmArgs = ['-XX:+ExitOnOutOfMemoryError', '-XX:MaxRAMPercentage=75.0']
}

dependencies {
    implementation project(':airbyte-cdk:java:airbyte-cdk-integrations') // Core CDK

    implementation 'com.google.guava:guava:32.1.3-jre' // Guava utilities
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3' // Jackson for JSON
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.3' // Jackson date/time support
    // SLF4j for logging (CDK likely provides this transitively, but explicit is good)
    implementation 'org.slf4j:slf4j-api:2.0.9'

    // For HTTP Client (using Java 11+ built-in) - No extra dependency needed
    // If using OkHttp: implementation 'com.squareup.okhttp3:okhttp:4.11.0'

    // Lombok (Optional, reduces boilerplate)
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    // Testing
    testImplementation project(':airbyte-cdk:java:airbyte-cdk-integration-tests')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    testImplementation 'org.mockito:mockito-core:5.5.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'
    // Add assertion library if needed e.g., testImplementation 'org.assertj:assertj-core:3.24.2'
}